name: User Manual Generation

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'docs/user-manual-template.md'
      - 'scripts/generate-user-manual.py'
  pull_request:
    branches: [ main ]
    paths:
      - 'docs/user-manual-template.md'
      - 'scripts/generate-user-manual.py'
  workflow_dispatch:
    inputs:
      system_version:
        description: 'System version to include in manual'
        required: true
        default: '2.0.0'

jobs:
  generate-manual:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip

    - name: Validate template structure
      run: |
        python scripts/generate-user-manual.py --validate-only

    - name: Generate user manual
      run: |
        python scripts/generate-user-manual.py --system-version ${{ github.event.inputs.system_version || '2.0.0' }}

    - name: Upload generated manual as artifact
      uses: actions/upload-artifact@v4
      with:
        name: user-manual
        path: docs/user-manual.md

    - name: Run comprehensive validation
      id: validation
      run: |
        # Check if manual was generated
        if [ ! -f "docs/user-manual.md" ]; then
          echo "::error::User manual was not generated"
          exit 1
        fi
        
        # Check file size
        manual_size=$(wc -c < "docs/user-manual.md")
        if [ $manual_size -lt 5000 ]; then
          echo "::warning::Generated manual seems too small ($manual_size bytes)"
        fi
        
        # Check for required sections
        required_sections=("Overview" "Device Setup" "Feature Guide" "Troubleshooting" "Safety Guidelines")
        for section in "${required_sections[@]}"; do
          if ! grep -q "## $section" "docs/user-manual.md"; then
            echo "::error::Missing required section: $section"
            echo "validation_result=failed" >> $GITHUB_OUTPUT
            exit 1
          fi
        done
        
        echo "::notice::Manual validation passed successfully"
        echo "validation_result=passed" >> $GITHUB_OUTPUT

    - name: Create validation report
      if: always()
      run: |
        echo "# User Manual Generation Report" >> $GITHUB_STEP_SUMMARY
        echo "**Generated on**: $(date)" >> $GITHUB_STEP_SUMMARY
        echo "**Template**: docs/user-manual-template.md" >> $GITHUB_STEP_SUMMARY
        echo "**Output**: docs/user-manual.md" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ -f "docs/user-manual.md" ]; then
          manual_size=$(wc -c < "docs/user-manual.md")
          line_count=$(wc -l < "docs/user-manual.md")
          echo "## Statistics" >> $GITHUB_STEP_SUMMARY
          echo "- File size: $manual_size bytes" >> $GITHUB_STEP_SUMMARY
          echo "- Line count: $line_count lines" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "## Required Sections Check" >> $GITHUB_STEP_SUMMARY
        required_sections=("Overview" "Device Setup" "Feature Guide" "Troubleshooting" "Safety Guidelines")
        for section in "${required_sections[@]}"; do
          if grep -q "## $section" "docs/user-manual.md"; then
            echo "- ✅ $section" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ❌ $section" >> $GITHUB_STEP_SUMMARY
          fi
        done

  deploy-docs:
    runs-on: ubuntu-latest
    needs: generate-manual
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download generated manual
      uses: actions/download-artifact@v4
      with:
        name: user-manual
        path: docs/

    - name: Verify manual deployment
      run: |
        if [ -f "docs/user-manual.md" ]; then
          echo "✅ User manual ready for deployment"
          # Add deployment steps here (e.g., GitHub Pages, documentation site)
        else
          echo "❌ User manual not found for deployment"
          exit 1
        fi