name: User Manual Generation

on:
  push:
    branches: [ main, feat/user-manual* ]
    paths:
      - 'docs/templates/**'
      - 'scripts/generate-user-manual.py'
      - '.github/workflows/user-manual-generation.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'docs/templates/**'
      - 'scripts/generate-user-manual.py'
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 0'  # Run weekly on Sunday at midnight

jobs:
  generate-user-manual:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install markdown

    - name: Validate template structure
      run: |
        python scripts/generate-user-manual.py --validate-only

    - name: Generate user manual
      run: |
        python scripts/generate-user-manual.py

    - name: Upload generated manual as artifact
      uses: actions/upload-artifact@v4
      with:
        name: generated-user-manual
        path: docs/user/GENERATED_USER_MANUAL.md

    - name: Upload validation report
      uses: actions/upload-artifact@v4
      with:
        name: validation-report
        path: docs/reports/validation_report.json

    - name: Create summary report
      run: |
        echo "# User Manual Generation Report" >> $GITHUB_STEP_SUMMARY
        echo "## üìã Validation Results" >> $GITHUB_STEP_SUMMARY
        
        if [ -f "docs/reports/validation_report.json" ]; then
          echo "‚úÖ Template validation completed successfully" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üìä Statistics" >> $GITHUB_STEP_SUMMARY
          echo "- Generated manual: docs/user/GENERATED_USER_MANUAL.md" >> $GITHUB_STEP_SUMMARY
          
          # Extract stats from JSON report
          FILE_SIZE=$(jq -r '.statistics.file_size' docs/reports/validation_report.json)
          LINE_COUNT=$(jq -r '.statistics.line_count' docs/reports/validation_report.json)
          STATUS=$(jq -r '.validation.status' docs/reports/validation_report.json)
          
          echo "- File size: $FILE_SIZE bytes" >> $GITHUB_STEP_SUMMARY
          echo "- Line count: $LINE_COUNT lines" >> $GITHUB_STEP_SUMMARY
          echo "- Validation status: $STATUS" >> $GITHUB_STep_SUMMARY
          
          # Check for format issues
          FORMAT_ISSUES=$(jq -r '.validation.format_issues | length' docs/reports/validation_report.json)
          if [ "$FORMAT_ISSUES" -gt 0 ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### ‚ö†Ô∏è Format Warnings" >> $GITHUB_STEP_SUMMARY
            jq -r '.validation.format_issues[]' docs/reports/validation_report.json | while read issue; do
              echo "- $issue" >> $GITHUB_STEP_SUMMARY
            done
          fi
          
        else
          echo "‚ùå Validation report not found" >> $GITHUB_STEP_SUMMARY
        fi

  deploy-docs:
    runs-on: ubuntu-latest
    needs: generate-user-manual
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download generated manual
      uses: actions/download-artifact@v4
      with:
        name: generated-user-manual
        path: docs/user/

    - name: Deploy to GitHub Pages (if configured)
      if: success()
      run: |
        echo "üìö Manual generated and ready for deployment"
        echo "To deploy to GitHub Pages, configure pages in repository settings"

  notify-success:
    runs-on: ubuntu-latest
    needs: generate-user-manual
    if: always()
    
    steps:
    - name: Download validation report
      uses: actions/download-artifact@v4
      with:
        name: validation-report
        path: ./

    - name: Send success notification
      if: success()
      run: |
        echo "‚úÖ User manual generation completed successfully"
        echo "Manual available at: docs/user/GENERATED_USER_MANUAL.md"

    - name: Send failure notification
      if: failure()
      run: |
        echo "‚ùå User manual generation failed"
        echo "Check the validation report for details"